{"version":3,"sources":["webpack://@stackrole/gatsby-starter-foundation/./src/templates/blog-post.js"],"names":["styles","pagination","color","Pagination","props","className","sx","previous","frontmatter","template","Link","to","slug","rel","title","next","data","pageContext","markdownRemark","html","excerpt","Image","featuredImage","childImageSharp","gatsbyImageData","description","image","article","date","G","alt","dangerouslySetInnerHTML","__html"],"mappings":"wOASMA,EAAS,CACb,qBAAsB,CACpB,mBAAoB,OAEtBC,WAAY,CACV,EAAK,CACHC,MAAO,QACP,cAAe,CACbA,MAAO,QAET,UAAW,CACTA,MAAO,WAMTC,EAAa,SAACC,GAAD,OACjB,eACEC,UAAU,mBACVC,GAAIN,EAAOC,aAEX,kBACMG,EAAMG,UAAoD,cAAxCH,EAAMG,SAASC,YAAYC,WAC7C,mBACI,QAAC,EAAAC,KAAD,CAAMC,GAAIP,EAAMG,SAASC,YAAYI,KAAMC,IAAI,SAC7C,aACEP,GAAI,CACFJ,MAAO,WAGT,gBAAMG,UAAU,eAAa,QAAC,MAAD,OAL/B,cAMA,gBAAMA,UAAU,cAAcD,EAAMG,SAASC,YAAYM,SAI/DV,EAAMW,MAA4C,cAApCX,EAAMW,KAAKP,YAAYC,WACrC,mBACE,QAAC,EAAAC,KAAD,CAAMC,GAAIP,EAAMW,KAAKP,YAAYI,KAAMC,IAAI,SACzC,aACEP,GAAI,CACFJ,MAAO,UAFX,SAIM,gBAAMG,UAAU,gBAAc,QAAC,MAAD,SACpC,gBAAMA,UAAU,cAAcD,EAAMW,KAAKP,YAAYM,YAyDnE,UAjDa,SAAC,GAA2B,IAAzBE,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACZC,EAAmBF,EAAnBE,eACAV,EAA+BU,EAA/BV,YAAaW,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAErBC,EAAQb,EAAYc,cACxBd,EAAYc,cAAcC,gBAAgBC,gBAC1C,GACMjB,EAAmBU,EAAnBV,SAAUQ,EAASE,EAATF,KAEdX,EAAQ,CACVG,WACAQ,QAGF,OACE,QAAC,IAAD,CAAQV,UAAU,SAChB,QAAC,IAAD,CACES,MAAON,EAAYM,MACnBW,YAAajB,EAAYiB,YAAcjB,EAAYiB,YAAcL,EACjEM,MAAOL,EACPM,SAAS,KAEX,mBAAStB,UAAU,cACjB,kBAAQA,UAAU,oBAChB,mBAASA,UAAU,mBACjB,kBAAKG,EAAYM,QACjB,oBAAON,EAAYoB,OAEpBP,GACC,QAAC,EAAAQ,EAAD,CACEH,MAAOL,EACPS,IAAKtB,EAAYM,MAAQ,oBACzBT,UAAU,mBAEV,KAGN,eACEA,UAAU,oBACV0B,wBAAyB,CAAEC,OAAQb,OAGrCZ,GAAYQ,KACZ,QAACZ,EAAeC","file":"component---src-templates-blog-post-js-0a99ac459876c9404607.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from 'theme-ui'\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\nimport { RiArrowRightLine, RiArrowLeftLine } from \"react-icons/ri\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from '../components/seo';\r\n\r\nconst styles = {\r\n  'article blockquote': {\r\n    'background-color': 'Red'\r\n  },\r\n  pagination: {\r\n    'a': {\r\n      color: 'muted',\r\n      '&.is-active': {\r\n        color: 'text'\r\n      },\r\n      '&:hover': {\r\n        color: 'text'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst Pagination = (props) => (\r\n  <div \r\n    className=\"pagination -post\"\r\n    sx={styles.pagination}\r\n  >\r\n    <ul>\r\n        {(props.previous && props.previous.frontmatter.template === 'blog-post') && (\r\n          <li>\r\n              <Link to={props.previous.frontmatter.slug} rel=\"prev\">\r\n                <p\r\n                  sx={{\r\n                    color: 'muted'\r\n                  }}\r\n                >\r\n                  <span className=\"icon -left\"><RiArrowLeftLine/></span> Previous</p>\r\n                <span className=\"page-title\">{props.previous.frontmatter.title}</span>\r\n              </Link>\r\n          </li>\r\n        )}\r\n        {(props.next && props.next.frontmatter.template === 'blog-post') && (\r\n          <li>\r\n            <Link to={props.next.frontmatter.slug} rel=\"next\">\r\n              <p\r\n                sx={{\r\n                  color: 'muted'\r\n                }}\r\n              >Next <span className=\"icon -right\"><RiArrowRightLine/></span></p>\r\n              <span className=\"page-title\">{props.next.frontmatter.title}</span>\r\n            </Link>\r\n          </li>\r\n        )}\r\n    </ul>\r\n  </div>\r\n)\r\n\r\nconst Post = ({ data, pageContext }) => {\r\n  const { markdownRemark } = data // data.markdownRemark holds your post data\r\n  const { frontmatter, html, excerpt } = markdownRemark\r\n\r\n  const Image = frontmatter.featuredImage\r\n  ? frontmatter.featuredImage.childImageSharp.gatsbyImageData\r\n  : \"\"\r\n  const { previous, next } = pageContext\r\n\r\n  let props = {\r\n    previous,\r\n    next\r\n  }\r\n\r\n  return (\r\n    <Layout className=\"page\">\r\n      <SEO\r\n        title={frontmatter.title}\r\n        description={frontmatter.description ? frontmatter.description : excerpt}\r\n        image={Image}\r\n        article={true}\r\n      />\r\n      <article className=\"blog-post\">\r\n        <header className=\"featured-banner\">\r\n          <section className=\"article-header\">\r\n            <h1>{frontmatter.title}</h1>\r\n            <time>{frontmatter.date}</time>\r\n          </section>\r\n          {Image ? (\r\n            <GatsbyImage\r\n              image={Image}\r\n              alt={frontmatter.title + \" - Featured image\"}\r\n              className=\"featured-image\"\r\n            />\r\n          ) : \"\"}\r\n        </header>\r\n        \r\n        <div\r\n          className=\"blog-post-content\"\r\n          dangerouslySetInnerHTML={{ __html: html }}\r\n        />\r\n      </article>\r\n      {(previous || next) && (\r\n        <Pagination {...props} />\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Post\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostQuery($id: String!) {\r\n    markdownRemark( \r\n      id: { eq: $id }\r\n    ) {\r\n      id\r\n      html\r\n      excerpt(pruneLength: 148)\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        slug\r\n        title\r\n        description\r\n        featuredImage {\r\n          childImageSharp {\r\n            gatsbyImageData(layout: FULL_WIDTH)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}