{"version":3,"sources":["webpack://@stackrole/gatsby-starter-foundation/./src/components/post-card.js","webpack://@stackrole/gatsby-starter-foundation/./src/templates/blog-list.js"],"names":["data","className","sx","bg","frontmatter","featuredImage","Link","to","slug","G","image","childImageSharp","gatsbyImageData","alt","title","variant","color","date","styles","pagination","Pagination","props","isFirst","prevPage","rel","Array","from","length","numPages","_","i","key","blogSlug","currentPage","isLast","nextPage","BlogIndex","render","this","pageContext","toString","posts","allMarkdownRemark","edges","filter","edge","node","map","id","description","React"],"mappings":"mMAgDA,IA3CiB,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OACf,mBACEC,UAAU,YACVC,GAAI,CACFC,GAAI,WAGLH,EAAKI,YAAYC,eAEd,QAAC,EAAAC,KAAD,CAAMC,GAAIP,EAAKI,YAAYI,OACzB,QAAC,EAAAC,EAAD,CACEC,MACEV,EAAKI,YAAYC,cAAcM,gBAAgBC,gBAEjDC,IAAKb,EAAKI,YAAYU,MAAQ,oBAC9Bb,UAAU,oBAGZ,IAEN,eAAKA,UAAU,iBACb,cAAIA,UAAU,UACZ,QAAC,EAAAK,KAAD,CACEC,GAAIP,EAAKI,YAAYI,KACrBN,GAAI,CACFa,QAAS,mBAGVf,EAAKI,YAAYU,SAGtB,aACEb,UAAU,OACVC,GAAI,CACFc,MAAO,WAGT,oBAAOhB,EAAKI,YAAYa,W,6HCjC1BC,EAAS,CACbC,WAAY,CACV,EAAK,CACHH,MAAO,QACP,cAAe,CACbA,MAAO,QAET,UAAW,CACTA,MAAO,WAqCTI,EAAa,SAACC,GAAD,OACjB,eACEpB,UAAU,aACVC,GAAIgB,EAAOC,aAEX,mBACIE,EAAMC,UACN,mBACE,QAAC,EAAAhB,KAAD,CAAMC,GAAIc,EAAME,SAAUC,IAAI,SAC9B,gBAAMvB,UAAU,eAAa,QAAC,MAAD,OAD7B,cAKHwB,MAAMC,KAAK,CAAEC,OAAQN,EAAMO,WAAY,SAACC,EAAGC,GAAJ,OACtC,cAAIC,IAAG,qBAAsBD,EAAI,KAC/B,QAAC,EAAAxB,KAAD,CACEC,GAAE,GAAKc,EAAMW,UAAiB,IAANF,EAAU,GAAKA,EAAI,GAC3C7B,UAAWoB,EAAMY,cAAgBH,EAAI,EAAI,gBAAkB,OAE1DA,EAAI,QAITT,EAAMa,SACN,mBACE,QAAC,EAAA5B,KAAD,CAAMC,GAAIc,EAAMc,SAAUX,IAAI,QAA9B,SACO,gBAAMvB,UAAU,gBAAc,QAAC,MAAD,YAOzCmC,E,6FACJC,OAAA,WAEE,IAAQrC,EAASsC,KAAKjB,MAAdrB,KACR,EAAkCsC,KAAKjB,MAAMkB,YAArCN,EAAR,EAAQA,YAAaL,EAArB,EAAqBA,SACfI,EAAW,SACXV,EAA0B,IAAhBW,EACVC,EAASD,IAAgBL,EACzBL,EAAWU,EAAc,GAAM,EAAID,EAAWA,GAAYC,EAAc,GAAGO,WAC3EL,EAAWH,GAAYC,EAAc,GAAGO,WAExCC,EAAQzC,EAAK0C,kBAAkBC,MAClCC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAK1C,YAAYa,QACvC8B,KAAI,SAAAF,GAAI,OACP,QAAC,IAAD,CAAUd,IAAKc,EAAKC,KAAKE,GAAIhD,KAAM6C,EAAKC,UAExCzB,EAAQ,CACVC,UACAC,WACAK,WACAI,WACAC,cACAC,SACAC,YAGF,OACE,QAAC,IAAD,CAAQlC,UAAU,cAChB,QAAC,IAAD,CACEa,MAAO,eAAiBmB,EAAc,OAASL,EAC/CqB,YAAa,4BAA8BhB,EAAc,OAASL,KAEpE,2BACA,eAAK3B,UAAU,yBACZwC,IAEH,QAACrB,EAAeC,K,GApCA6B,aA0CxB","file":"component---src-templates-blog-list-js-8eb48d43c4d4efd69eb5.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from 'theme-ui'\r\nimport { Link } from \"gatsby\"\r\nimport { GatsbyImage } from \"gatsby-plugin-image\"\r\n\r\nconst PostCard = ({ data }) => (\r\n  <article \r\n    className=\"post-card\"\r\n    sx={{\r\n      bg: 'cardBg'\r\n    }}\r\n  >\r\n    {data.frontmatter.featuredImage ? \r\n      (\r\n        <Link to={data.frontmatter.slug}>\r\n          <GatsbyImage\r\n            image={\r\n              data.frontmatter.featuredImage.childImageSharp.gatsbyImageData\r\n            }\r\n            alt={data.frontmatter.title + \" - Featured image\"}\r\n            className=\"featured-image\"\r\n          />\r\n        </Link>\r\n      ) : \"\"\r\n    }\r\n    <div className=\"post-content\">\r\n      <h2 className=\"title\">\r\n        <Link \r\n          to={data.frontmatter.slug}\r\n          sx={{\r\n            variant: 'links.postLink'\r\n          }}\r\n        >\r\n          {data.frontmatter.title}\r\n        </Link>\r\n      </h2>\r\n      <p \r\n        className=\"meta\"\r\n        sx={{\r\n          color: 'muted',\r\n        }}\r\n      >\r\n        <time>{data.frontmatter.date}</time>\r\n      </p>\r\n    </div>\r\n  </article>\r\n)\r\n\r\nexport default PostCard","/** @jsx jsx */\r\nimport { jsx } from 'theme-ui'\r\nimport React from 'react'\r\nimport { Link , graphql } from \"gatsby\"\r\nimport { RiArrowRightLine, RiArrowLeftLine } from \"react-icons/ri\"\r\nimport Layout from \"../components/layout\"\r\nimport PostCard from \"../components/post-card\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst styles = {\r\n  pagination: {\r\n    'a': {\r\n      color: 'muted',\r\n      '&.is-active': {\r\n        color: 'text'\r\n      },\r\n      '&:hover': {\r\n        color: 'text'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const blogListQuery = graphql`\r\n  query blogListQuery($skip: Int!, $limit: Int!) {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n      filter: { frontmatter: { template: { eq: \"blog-post\" } } }\r\n      limit: $limit\r\n      skip: $skip\r\n\t\t) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 250)\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            slug\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\tfeaturedImage {\r\n\t\t\t\t\t\t\tchildImageSharp {\r\n                gatsbyImageData(\r\n                  layout: CONSTRAINED\r\n                  width: 345\r\n                  height: 260\r\n                )\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nconst Pagination = (props) => (\r\n  <div \r\n    className=\"pagination\"\r\n    sx={styles.pagination}\r\n  >\r\n    <ul>\r\n      {!props.isFirst && (\r\n        <li>\r\n          <Link to={props.prevPage} rel=\"prev\">\r\n          <span className=\"icon -left\"><RiArrowLeftLine/></span> Previous\r\n          </Link>\r\n        </li>\r\n      )}\r\n      {Array.from({ length: props.numPages }, (_, i) => (\r\n        <li key={`pagination-number${i + 1}`} >\r\n          <Link\r\n            to={`${props.blogSlug}${i === 0 ? '' : i + 1}`}\r\n            className={props.currentPage === i + 1 ? \"is-active num\" : \"num\"}\r\n          >\r\n            {i + 1}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n      {!props.isLast && (\r\n        <li>\r\n          <Link to={props.nextPage} rel=\"next\">\r\n            Next <span className=\"icon -right\"><RiArrowRightLine/></span>\r\n          </Link>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  </div>\r\n)\r\nclass BlogIndex extends React.Component {\r\n  render() {\r\n    \r\n    const { data } = this.props\r\n    const { currentPage, numPages } = this.props.pageContext\r\n    const blogSlug = '/blog/' \r\n    const isFirst = currentPage === 1\r\n    const isLast = currentPage === numPages\r\n    const prevPage = currentPage - 1 === 1 ? blogSlug : blogSlug + (currentPage - 1).toString()\r\n    const nextPage = blogSlug + (currentPage + 1).toString()\r\n\r\n    const posts = data.allMarkdownRemark.edges\r\n      .filter(edge => !!edge.node.frontmatter.date)\r\n      .map(edge =>\r\n        <PostCard key={edge.node.id} data={edge.node} />\r\n      )\r\n    let props = {\r\n      isFirst,\r\n      prevPage,\r\n      numPages,\r\n      blogSlug,\r\n      currentPage,\r\n      isLast,\r\n      nextPage\r\n    }\r\n    \r\n    return (\r\n      <Layout className=\"blog-page\">\r\n        <SEO\r\n          title={\"Blog â€” Page \" + currentPage + \" of \" + numPages}\r\n          description={\"Stackrole base blog page \" + currentPage + \" of \" + numPages }\r\n        />\r\n        <h1>Blog</h1>\r\n        <div className=\"grids col-1 sm-2 lg-3\">\r\n          {posts}\r\n        </div>\r\n        <Pagination {...props} />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogIndex"],"sourceRoot":""}